@{
    Layout = "_Search";
}

@{
    ViewData["Title"] = "Search";
    ViewData["PageHeading"] = "Search";
}

<section class="wrap">


    <form asp-action="Search" class="fullWidth">

        <p>Search by Team Title:</p>

        <p>
            <input type="text" name="SearchString" class="searchBox" asp-for="@ViewData["SearchString"]" />
        </p>

        <p>
            <select name="certType">
                @foreach (var cert in (List<string>)@ViewData["teamCerts"])
                {
                    if (cert == (string)@ViewData["FilterTeamCert"])
                    {
                        <option value="@cert" selected>@cert</option>
                    }
                    else
                    {
                        <option value="@cert">@cert</option>
                    }
                }
            </select>

            @*https://sensibledev.com/how-to-bind-dropdownlist-in-mvc/*@

            @*<select asp-for="@ViewData["teamCertsSelectList"]" asp-items="(SelectList)@ViewData["teamCertsSelectList"]" multiple="">
                </select>*@

        </p>

        <p>
            <input type="submit" value="Search" class="cta" />

        </p>

    </form>

    <div>

        @if (ViewData["SearchString"] != null && ViewData["SearchString"].ToString() != String.Empty)
        {



            @foreach (var item in Model)
            {
                <p>@item.TeamTitle (@item.TeamCertificate)</p>
                <p><a asp-controller="Home" asp-action="TeamDetails" asp-route-id="@item.TeamID">Details</a></p>} if (Model.Count == 0)

            {

                <p>Sorry no matches.</p>}

        }
    </div>
</section>


